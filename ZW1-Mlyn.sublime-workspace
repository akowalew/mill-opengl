{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"model",
				"modelUni"
			],
			[
				"GL_DEPTH_BUFFER",
				"GL_DEPTH_BUFFER_BIT\tGL_DEPTH_BUFFER_BIT"
			],
			[
				"rotat",
				"rotateSpeedZ"
			],
			[
				"rotate",
				"rotateSpeedX"
			],
			[
				"gWind",
				"gWindowsEnd"
			],
			[
				"radians",
				"radians\tgenType radians(genType degrees)"
			],
			[
				"iipw",
				"iipwTex"
			],
			[
				"tex",
				"texIIPW"
			],
			[
				"texco",
				"texcoordAttr\ttexcoordAttr(args)"
			],
			[
				"weiti",
				"weitiTex"
			],
			[
				"GL_CLAMP",
				"GL_CLAMP_TO_EDGE\tGL_CLAMP_TO_EDGE"
			],
			[
				"texII",
				"texIIPWUniform"
			],
			[
				"Te",
				"Texture2D"
			],
			[
				"color",
				"colorSize"
			],
			[
				"image",
				"imageData"
			],
			[
				"util",
				"util/final_action.hpp\t/home/akowalew/workspace/ZW1-Mlyn/util/include"
			],
			[
				"generat",
				"generateNative"
			],
			[
				"GL_VERTEX",
				"GL_VERTEX_SHADER\tGL_VERTEX_SHADER"
			],
			[
				"glGet",
				"glGetIntegerv\tvoid glGetIntegerv(GLenum pname, GLint *params)"
			],
			[
				"GLFWMoni",
				"GLFWmonitor\tGLFWmonitor"
			],
			[
				"DEfau",
				"DefaultWidth\tconst int DefaultWidth"
			],
			[
				"Window",
				"WindowTitle"
			],
			[
				"Windo",
				"WindowHeight\tconst int WindowHeight"
			],
			[
				"GLFW_OPEN",
				"GLFW_OPENGL_CORE_PROFILE\tGLFW_OPENGL_CORE_PROFILE"
			],
			[
				"GLFW_CONTEXT",
				"GLFW_CONTEXT_VERSION_MINOR"
			],
			[
				"GLFW_CONTEXT_VERS",
				"GLFW_CONTEXT_VERSION_MAJOR\tGLFW_CONTEXT_VERSION_MAJOR"
			],
			[
				"main",
				"mainWindow_\tmainWindow_(args)"
			],
			[
				"CMAKE_cURREN_",
				"CMAKE_CURRENT_SOURCE_DIR\tbuiltin"
			],
			[
				"fra",
				"FragmentShaderPath\tconst char *const FragmentShaderPath"
			],
			[
				"fragme",
				"fragmentShaderPath"
			],
			[
				"hna",
				"handle"
			],
			[
				"vertex",
				"vertexShaderCode\tbasic_string<char, char_traits<char>, allocator<char> > vertexShaderCode"
			],
			[
				"verte",
				"vertexShaderStream\tbasic_ifstream<char> vertexShaderStream"
			],
			[
				"vert",
				"VertexShaderPath\tconst char *const VertexShaderPath"
			],
			[
				"trian",
				"triangleVertices"
			],
			[
				"windo",
				"window_\tglfw::Window window_"
			],
			[
				"glfwWi",
				"glfwWindowShouldClose\tint glfwWindowShouldClose(GLFWwindow *window)"
			],
			[
				"nam",
				"namespace"
			],
			[
				"target",
				"target_include_directories\tcommand"
			],
			[
				"handle",
				"handle_\tHandle handle_"
			],
			[
				"key",
				"keyCallback"
			],
			[
				"glfwDes",
				"glfwDestroyWindow\tvoid glfwDestroyWindow(GLFWwindow *window)"
			],
			[
				"glfw",
				"glfw-cpp"
			],
			[
				"run",
				"runtime_error"
			],
			[
				"ZW",
				"ZW1-Mlyn"
			],
			[
				"CMAKE_CURRENT",
				"CMAKE_CURRENT_SOURCE_DIR\tbuiltin"
			],
			[
				"soil",
				"SOIL_INCLUDE_DIRS\tline 37"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_SOURCE_DIR\tbuiltin"
			],
			[
				"aligned_storag",
				"aligned_storage_t\taligned_storage_t<size_t _Len, size_t _Align>"
			],
			[
				"last",
				"int_least16_t\tint_least16_t"
			],
			[
				"fir",
				"firstNode\tauto firstNode"
			],
			[
				"_s",
				"_sentinel"
			],
			[
				"BOOST",
				"BOOST_AUTO_TEST_CASE_TEMPLATE"
			],
			[
				"const",
				"const_iterator\tconst_iterator"
			],
			[
				"reverse",
				"reverse_iterator\treverse_iterator<typename _Iterator>"
			],
			[
				"BOOS",
				"BOOST_CHECK"
			],
			[
				"ve",
				"vector\tstd::vector"
			],
			[
				"BOO",
				"BOOST_AUTO_TEST_CASE_TEMPLATE"
			],
			[
				"vec",
				"vector2"
			],
			[
				"BO",
				"BOOST_CHECK"
			],
			[
				"BOST",
				"BOOST_AUTO_TEST_CASE_TEMPLATE"
			],
			[
				"s",
				"_size\tsize_type _size"
			],
			[
				"BOSO",
				"BOOST_AUTO_TEST_CASE_TEMPLATE"
			],
			[
				"ptr",
				"ptrdiff_t\tptrdiff_t"
			],
			[
				"pre",
				"previousSize"
			],
			[
				"no",
				"noexcept"
			],
			[
				"vecto",
				"vector2"
			],
			[
				"Boo",
				"BOOST_AUTO_TEST_CASE_TEMPLATE"
			],
			[
				"BOOST_",
				"BOOST_CHECK"
			],
			[
				"new",
				"newBuffer\tauto newBuffer"
			],
			[
				"B",
				"BOOST_CHECK"
			],
			[
				"_rx",
				"_rxHandler\tint _rxHandler"
			],
			[
				"by",
				"bytesRead"
			],
			[
				"Tx",
				"TxBuffer"
			],
			[
				"_tx",
				"_txBuffer\tint _txBuffer"
			],
			[
				"UARTFifoLe",
				"UARTFIFOLevelSet\tvoid UARTFIFOLevelSet(uint32_t ui32Base, uint32_t ui32TxLevel, uint32_t ui32RxLevel)"
			],
			[
				"UARTFifo",
				"UARTFIFOLevelGet\tvoid UARTFIFOLevelGet(uint32_t ui32Base, uint32_t *pui32TxLevel, uint32_t *pui32RxLevel)"
			],
			[
				"target_compile",
				"target_compile_definitions\tcommand"
			],
			[
				"atte",
				"attemptWrite"
			],
			[
				"FIFO",
				"FIFOSize"
			],
			[
				"TX",
				"TxBuffer"
			],
			[
				"Stat",
				"StaticFunction"
			],
			[
				"sub",
				"subspan"
			],
			[
				"DATA",
				"dataHasError\tbool dataHasError(std::uint32_t rawData)"
			],
			[
				"static",
				"static_assert\tstatic_assert(expression, message)"
			],
			[
				"sts",
				"systick"
			],
			[
				"cmake",
				"cmake_minimum_required\tcommand"
			]
		]
	},
	"build_system": "ZW1-Mlyn - ZW1-Mlyn",
	"build_system_choices":
	[
		[
			[
				[
					"GLFW - glfw",
					""
				],
				[
					"GLFW - glfw/fast",
					""
				],
				[
					"ZW1-Mlyn - SOIL_static",
					""
				],
				[
					"ZW1-Mlyn - SOIL_static/fast",
					""
				],
				[
					"ZW1-Mlyn - ZW1-Mlyn",
					""
				],
				[
					"ZW1-Mlyn - ZW1-Mlyn/fast",
					""
				],
				[
					"ZW1-Mlyn - all",
					""
				],
				[
					"ZW1-Mlyn - clean",
					""
				],
				[
					"ZW1-Mlyn - edit_cache",
					""
				],
				[
					"ZW1-Mlyn - install",
					""
				],
				[
					"ZW1-Mlyn - install/local",
					""
				],
				[
					"ZW1-Mlyn - install/strip",
					""
				],
				[
					"ZW1-Mlyn - list_install_components",
					""
				],
				[
					"ZW1-Mlyn - rebuild_cache",
					""
				],
				[
					"ZW1-Mlyn - resources",
					""
				],
				[
					"glew - libglew_static",
					""
				],
				[
					"glew - libglew_static/fast",
					""
				],
				[
					"glm - glm_shared",
					""
				],
				[
					"glm - glm_shared/fast",
					""
				],
				[
					"glm - glm_static",
					""
				],
				[
					"glm - glm_static/fast",
					""
				],
				[
					"glm - uninstall",
					""
				]
			],
			[
				"ZW1-Mlyn - ZW1-Mlyn",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"git diff",
				"Git: Diff Current File"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"diff",
				"Set Syntax: Diff"
			],
			[
				"ren",
				"Rename File"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"INSTAL",
				"Package Control: Install Package"
			],
			[
				"setting",
				"Preferences: Settings"
			],
			[
				"renam",
				"Rename File"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"ecc",
				"EasyClangComplete: Settings"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add Current File"
			],
			[
				"git statu",
				"Git: Status"
			],
			[
				"clean",
				"Build With: ZW1-Mlyn - clean"
			],
			[
				"settin",
				"Preferences: Settings"
			],
			[
				"livereload",
				"LiveReload: Enable/disable plug-ins"
			],
			[
				"isntal",
				"Package Control: Install Package"
			],
			[
				"markdow",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markdown",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"e",
				"EasyClangComplete: Settings"
			],
			[
				"ECC",
				"EasyClangComplete: Clean current CMake cache"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"glsl",
				"Set Syntax: GLSL"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"sett",
				"Preferences: Settings"
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"check",
				"Git: Checkout Current File"
			],
			[
				"commi",
				"Git: Commit"
			],
			[
				"statu",
				"Git: Status"
			],
			[
				"setti",
				"Preferences: Settings"
			],
			[
				"gitsta",
				"Git: Status"
			],
			[
				"C++",
				"Set Syntax: C++"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"eccse",
				"EasyClangComplete: Show all errors"
			],
			[
				"cmake",
				"Set Syntax: CMake"
			],
			[
				"minima",
				"View: Toggle Minimap"
			],
			[
				"terminu",
				"Terminus Utilities: Select Theme"
			],
			[
				"ISNTALL",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 274.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/Context.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/include/glfw/Window.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/gkom.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/Application.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/gkom.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/src/glfw.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/main.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/app/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/Window.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/Window.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/Application.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/Scene.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/include/glfw/glfw.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/include/Scene.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glfw/include/GLFW/glfw3.h",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/src/Window.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/gl.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/include/Camera.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/include/Color.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/Box.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/include/Object.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/include/Rectangle.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glm/glm/trigonometric.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/include/Triangle.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/VertexBuffer.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/Uniform.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/include/Box.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glm/glm/ext/matrix_clip_space.inl",
		"/home/akowalew/workspace/ZW1-Mlyn/app/include/World.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/include/Shape.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/include/Size.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/Attribute.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/Box.vsh",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/Box.fsh",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/Program.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/VertexShader.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/ElementBuffer.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/VertexArray.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/Shader.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/main.fsh",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/main.vsh",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/Triangle.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glm/glm/gtc/type_ptr.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glm/glm/ext/matrix_transform.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/Texture2D.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/Rectangle.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glew-cmake/auto/src/glew_head.h",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/Triangle.fsh",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/Rectangle.fsh",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/Rectangle.vsh",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/triangle.fsh",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glew-cmake/include/GL/glew.h",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/FragmentShader.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glm/glm/detail/type_vec2.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/triangle.vsh",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/Simple-OpenGL-Image-Library/src/SOIL.h",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/Simple-OpenGL-Image-Library/src/SOIL.c",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/test.fsh",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/ArrayBuffer.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/test.vsh",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/src/Shader.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/util.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/src/glew.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/glew.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glew-cmake/auto/src/glewinfo_gl.c",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glew-cmake/auto/src/glew_init_tail.c",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/MainWindow.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/MainWindow.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glfw/src/wl_window.c",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glfw/src/context.c",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glfw/src/internal.h",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glfw/src/cocoa_window.m",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/Triangle.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/MainScene.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/Application.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/MainScene.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glew-cpp/include/gl/Program.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glew-cpp/include/gl/util.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/Scene.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/Application.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glew-cpp/include/gl/Shader.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glew-cpp/include/gl/gl.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glew-cpp/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/glew-cpp/src/Shader.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glew-cpp/src/Program.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glew-cpp/src/glew.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glew-cpp/src/util.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glew-cpp/include/glew/glew.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/test.vert",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/test.frag",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glfw/deps/glad/glad.h",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glew-cmake/auto/src/glew_tail.h",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glew-cmake/src/glew.c",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/shprogram.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/util/include/util/final_action.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/util/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glfw/src/window.c",
		"/home/akowalew/workspace/ZW1-Mlyn/ZW1-Mlyn.sublime-project",
		"/home/akowalew/.config/sublime-text-3/Packages/ANSIescape/ansi.sublime-settings",
		"/home/akowalew/.config/sublime-text-3/Packages/User/ansi.sublime-settings",
		"/home/akowalew/workspace/ZW1-Mlyn/app/res/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/src/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/src/glfw-cpp/include/glfw/Window.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/app/Application.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/app/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/src/glfw-cpp/glfw.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/Application.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/glfw/glfw.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/main.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/glfw-cpp/Window.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/glfw-cpp/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/src/glfw/glfw.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/glfw/CMakeLists.txt",
		"/home/akowalew/workspace/Project/src/main.cpp",
		"/home/akowalew/workspace/Project/src/shprogram.cpp",
		"/home/akowalew/workspace/opengl-tutorial/submodules/glm/glm/CMakeLists.txt",
		"/home/akowalew/workspace/opengl-tutorial/src/main.cpp",
		"/home/akowalew/workspace/opengl-tutorial/submodules/glfw/CMakeLists.txt",
		"/home/akowalew/workspace/opengl-tutorial/submodules/glfw/src/CMakeLists.txt",
		"/home/akowalew/workspace/opengl-tutorial/submodules/glew-cmake/CMakeLists.txt",
		"/home/akowalew/workspace/opengl-tutorial/submodules/CMakeLists.txt",
		"/home/akowalew/workspace/opengl-tutorial/CMakeLists.txt",
		"/home/akowalew/workspace/opengl-tutorial/res/gl_04.vert"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 103.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Window",
			"GLFWwindow*",
			"handle",
			"GLFWwindow",
			"ZW1-Mlyn",
			"window_hints",
			"hints",
			"HIDDEN",
			"glEnable",
			"Color",
			"glm::vec3 ",
			"perspectiveLH_ZO",
			"aspectRatio",
			"shapes",
			"Shape",
			"BackgroundColor",
			"Rectangle",
			"BackgroundColor",
			"modelUni",
			"id",
			"elements",
			"7 *",
			".x",
			"0.1f",
			"centerPoint",
			"1.0",
			"cameraPosition",
			"0.1",
			"0.0",
			"2f",
			"1.2",
			"trans",
			"rotateSpeedZ",
			"keyPressHandler",
			"GLFWkeyfun",
			"findWindowByHandle",
			"windowsEnd",
			"gWindows.end()",
			"GLFWkeyfun",
			"(void*)(",
			"glVertexAttribPointer",
			"setFormat",
			"#",
			"sizeof",
			"sizeof(Vertex::color)",
			"Vertex::",
			"Vertex::position",
			"position",
			"GL_FLOAT",
			"GLfloat",
			"sizeof(Vertex)",
			"GL_FALSE",
			"GL_FLOAT",
			"texcoord",
			"sizeof",
			"position",
			"GL_LINEAR",
			"0.8",
			"0.7",
			"Triangle",
			"4.0",
			"vertices",
			"texWEITI",
			"position",
			"VERTEX",
			"VertexShader",
			"GL_REPEAT",
			"array buffer",
			"array",
			"ArrayBuffer",
			"x",
			"data",
			"source",
			"hints",
			"windowHints",
			"texIIPW.setParam(",
			"param",
			"format",
			"attribute",
			"assign",
			"uniform",
			"pgm",
			"value",
			"getUniform",
			"getAttribute",
			"IIPW",
			"f(location",
			"f",
			"GLfloat",
			"texIIPW",
			"tex",
			"format",
			"7 * sizeof(GLfloat)",
			"(void*)",
			"GL_FALSE",
			"GL_FLOAT",
			"LINEAR",
			"GL_CLAMP_TO_EDGE",
			"glTexParameteri",
			"image",
			"ArrayBuffer",
			"7 * sizeof(GLfloat)",
			"color",
			"test",
			"GL_ARRAY_BUFFER",
			"array",
			"ArrayBuffer",
			"inColor",
			"inPosition",
			"inColor",
			"inC",
			"inP",
			"position",
			"Attribute",
			"MessageCallback",
			"VERTEX_ARRAY",
			"data",
			"array",
			"name",
			"isBound",
			"target",
			"Buffer",
			"VertexArray",
			"VertexBuffer",
			"VertexArray",
			"createNative",
			"handle_",
			"detachShader"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 139.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 121.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "ZW1-Mlyn - all",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"window gko",
				"gkom/src/Window.cpp"
			],
			[
				"window.cp",
				"glfw-cpp/src/Window.cpp"
			],
			[
				"glfw3",
				"submodules/glfw/include/GLFW/glfw3.h"
			],
			[
				"window",
				"glfw-cpp/include/glfw/Window.hpp"
			],
			[
				"glfw",
				"glfw-cpp/src/glfw.cpp"
			],
			[
				"appl",
				"gkom/include/gkom/Application.hpp"
			],
			[
				"WINDO",
				"glfw-cpp/include/glfw/Window.hpp"
			],
			[
				"scne",
				"app/include/Scene.hpp"
			],
			[
				"scene.cpp",
				"app/src/Scene.cpp"
			],
			[
				"gl.h",
				"gl-cpp/include/gl/gl.hpp"
			],
			[
				"color",
				"app/include/Color.hpp"
			],
			[
				"box",
				"app/src/Box.cpp"
			],
			[
				"scene",
				"app/include/Scene.hpp"
			],
			[
				"shape",
				"app/include/Shape.hpp"
			],
			[
				"verte",
				"gl-cpp/include/gl/VertexBuffer.hpp"
			],
			[
				"unifo",
				"gl-cpp/include/gl/Uniform.hpp"
			],
			[
				"gl.",
				"gl-cpp/include/gl/gl.hpp"
			],
			[
				"attr",
				"gl-cpp/include/gl/Attribute.hpp"
			],
			[
				"main",
				"app/src/main.cpp"
			],
			[
				"box.cp",
				"app/src/Box.cpp"
			],
			[
				"elemen",
				"gl-cpp/include/gl/ElementBuffer.hpp"
			],
			[
				"program",
				"gl-cpp/include/gl/Program.hpp"
			],
			[
				"shader",
				"gl-cpp/include/gl/Shader.hpp"
			],
			[
				"vertex",
				"gl-cpp/include/gl/VertexShader.hpp"
			],
			[
				"verteb",
				"gl-cpp/include/gl/VertexBuffer.hpp"
			],
			[
				"main.cp",
				"app/src/main.cpp"
			],
			[
				"glew.cp",
				"gl-cpp/src/glew.cpp"
			],
			[
				"glf",
				"glfw-cpp/src/glfw.cpp"
			],
			[
				"wind",
				"glfw-cpp/include/glfw/Window.hpp"
			],
			[
				"main.vs",
				"app/res/main.vsh"
			],
			[
				"main.fs",
				"app/res/main.fsh"
			],
			[
				"text",
				"gl-cpp/include/gl/Texture2D.hpp"
			],
			[
				"triang",
				"app/src/Triangle.cpp"
			],
			[
				"Attr",
				"gl-cpp/include/gl/Attribute.hpp"
			],
			[
				"triangle",
				"app/src/Triangle.cpp"
			],
			[
				"main.c",
				"app/src/main.cpp"
			],
			[
				"attri",
				"gl-cpp/include/gl/Attribute.hpp"
			],
			[
				"element",
				"gl-cpp/include/gl/ElementBuffer.hpp"
			],
			[
				"progrma",
				"gl-cpp/include/gl/Program.hpp"
			],
			[
				"uni",
				"gl-cpp/include/gl/Uniform.hpp"
			],
			[
				"attru",
				"gl-cpp/include/gl/Attribute.hpp"
			],
			[
				"attrb",
				"gl-cpp/include/gl/Attribute.hpp"
			],
			[
				"progr",
				"gl-cpp/include/gl/Program.hpp"
			],
			[
				"progra",
				"gl-cpp/include/gl/Program.hpp"
			],
			[
				"VERTE",
				"gl-cpp/include/gl/VertexArray.hpp"
			],
			[
				"shade",
				"gl-cpp/src/Shader.cpp"
			],
			[
				"glew.h",
				"submodules/glew-cmake/include/GL/glew.h"
			],
			[
				"widnow.c",
				"glfw-cpp/src/Window.cpp"
			],
			[
				"mainscene",
				"app/src/MainScene.cpp"
			],
			[
				"mainsce",
				"app/src/MainScene.hpp"
			],
			[
				"mainwind",
				"app/src/MainWindow.cpp"
			],
			[
				"mainwin",
				"app/src/MainWindow.hpp"
			],
			[
				"PROGRAM",
				"glew-cpp/include/gl/Program.hpp"
			],
			[
				"progrm",
				"glew-cpp/include/gl/Program.hpp"
			],
			[
				"triangl",
				"app/src/Triangle.cpp"
			],
			[
				"tir",
				"app/src/Triangle.hpp"
			],
			[
				"trian",
				"app/src/Triangle.hpp"
			],
			[
				"mainwi",
				"app/src/MainWindow.cpp"
			],
			[
				"mainwindo",
				"app/src/MainWindow.hpp"
			],
			[
				"glfw.cp",
				"glfw-cpp/src/glfw.cpp"
			],
			[
				"glfw.hpp",
				"glfw-cpp/include/glfw/glfw.hpp"
			],
			[
				"mainW",
				"app/src/MainWindow.hpp"
			],
			[
				"mainWin",
				"app/src/MainWindow.hpp"
			],
			[
				"APPL",
				"app/src/Application.cpp"
			],
			[
				"app",
				"app/src/Application.cpp"
			],
			[
				"window.",
				"glfw-cpp/src/Window.cpp"
			],
			[
				"windo",
				"glfw-cpp/include/glfw/Window.hpp"
			],
			[
				"vec",
				"include/aisdi/Vector.hpp"
			],
			[
				"vector",
				"test/VectorTest.cpp"
			],
			[
				"span",
				"submodules/GSL/include/gsl/span"
			],
			[
				"systick",
				"submodules/tivaware-cmake/src/driverlib/systick.c"
			],
			[
				"int",
				"submodules/tivaware-cmake/include/tivaware/driverlib/interrupt.h"
			],
			[
				"objdu",
				"build-release/test/objdump"
			],
			[
				"hwuar",
				"submodules/tivaware-cmake/include/tivaware/inc/hw_uart.h"
			],
			[
				"staticfu",
				"submodules/embxx/embxx/util/StaticFunction.h"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"interru",
				"submodules/tivaware-cmake/src/driverlib/interrupt.c"
			],
			[
				"interr",
				"submodules/tivaware-cmake/include/tivaware/driverlib/interrupt.h"
			],
			[
				"HWINT",
				"submodules/tivaware-cmake/include/tivaware/inc/hw_ints.h"
			],
			[
				"INTER",
				"submodules/tivaware-cmake/include/tivaware/driverlib/interrupt.h"
			],
			[
				"wordl",
				"include/tiva/uart/WordLength.hpp"
			],
			[
				"uart",
				"include/tiva/uart/UART.hpp"
			],
			[
				"obj",
				"build/test/objdump"
			],
			[
				"objd",
				"build/test/objdump"
			],
			[
				"sysctl",
				"submodules/tivaware-cmake/src/driverlib/sysctl.c"
			],
			[
				"ssi",
				"submodules/tivaware-cmake/src/driverlib/ssi.c"
			],
			[
				"gpioc.",
				"submodules/tivaware-cmake/src/driverlib/gpio.c"
			],
			[
				"gio.h",
				"submodules/tivaware-cmake/include/tivaware/driverlib/gpio.h"
			],
			[
				"boj",
				"build/test/objdump"
			],
			[
				"oj",
				"build/objdump"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 374.0,
		"last_filter": "vec4",
		"selected_items":
		[
			[
				"vec4",
				"vec4"
			],
			[
				"radians",
				"radians"
			],
			[
				"glfwsetkey",
				"glfwSetKeyCallback"
			],
			[
				"value_ptr",
				"value_ptr"
			],
			[
				"rotate",
				"rotate"
			],
			[
				"GL_COPY_READ_BUFFER_BINDING",
				"GL_COPY_READ_BUFFER_BINDING"
			],
			[
				"glfwhide",
				"glfwHideWindow"
			],
			[
				"glfwswap",
				"glfwSwapBuffers"
			],
			[
				"glew",
				"glewInfo"
			],
			[
				"glewInit",
				"glewInit"
			],
			[
				"glfwakeContextCurrent",
				"glfwMakeContextCurrent"
			],
			[
				"makeconte",
				"makeContextCurrent"
			],
			[
				"createprogram",
				"createProgram"
			],
			[
				"makep",
				"makeProgram"
			],
			[
				"glfwMakeContextCurrent",
				"glfwMakeContextCurrent"
			],
			[
				"GLFWCREATE",
				"glfwCreateWindow"
			]
		],
		"width": 549.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 202.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
