{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"empl",
				"emplace_hint\titerator emplace_hint(const_iterator __pos, _Args &&__args...)"
			],
			[
				"create",
				"createColorMaterial\tMaterial * createColorMaterial(const glm::vec4 &color)"
			],
			[
				"mater",
				"materialsFactory"
			],
			[
				"re",
				"rengine\tstd::default_random_engine rengine"
			],
			[
				"color",
				"color"
			],
			[
				"colo",
				"colorMaterialsEnd\tconst __normal_iterator<unique_ptr<Material, default_delete<Material> > *, vector<unique_ptr<Material, default_delete<Material> >, allocator<unique_ptr<Material, default_delete<Material> > > > > colorMaterialsEnd"
			],
			[
				"shader",
				"shaderProgram"
			],
			[
				"Ma",
				"MaterialsFactory"
			],
			[
				"MA",
				"MaterialsFactory"
			],
			[
				"M",
				"MaterialsFactory"
			],
			[
				"gra",
				"graphicsManager"
			],
			[
				"Mate",
				"Material"
			],
			[
				"Mater",
				"MaterialsFactory"
			],
			[
				"MAte",
				"MaterialsFactory\tMaterialsFactory"
			],
			[
				"indi",
				"indicesCount\tconst int indicesCount"
			],
			[
				"In",
				"Indices\tIndices"
			],
			[
				"vert",
				"Vertices\tVertices"
			],
			[
				"crae",
				"createVertexArray\tunsigned int createVertexArray(const Vertices &vertices, const Indices &indices)"
			],
			[
				"verte",
				"vertexArray"
			],
			[
				"loadD",
				"loadData\tvoid loadData(const std::vector<T> &indices)"
			],
			[
				"load",
				"loadData\tvoid loadData(const std::vector<T> &vertices)"
			],
			[
				"createVerte",
				"createVertexBuffer"
			],
			[
				"ini",
				"indices"
			],
			[
				"inid",
				"indicesBytes"
			],
			[
				"Index",
				"IndexBuffer\tIndexBuffer::"
			],
			[
				"gener",
				"generateBufferOnly"
			],
			[
				"Vertex",
				"VertexArray"
			],
			[
				"program",
				"program_invocation_name\tchar * program_invocation_name"
			],
			[
				"shad",
				"shaders_"
			],
			[
				"vertex",
				"vertexBuffers_\tstd::vector<unsigned int> vertexBuffers_"
			],
			[
				"ve",
				"vertexShader"
			],
			[
				"hand",
				"handle_"
			],
			[
				"use",
				"isUsed\tbool isUsed() const"
			],
			[
				"Shader",
				"ShaderProgram"
			],
			[
				"con",
				"const\tconst"
			],
			[
				"Sha",
				"ShaderProgram"
			],
			[
				"han",
				"handle_"
			],
			[
				"handle",
				"glGetHandleARB\tglGetHandleARB"
			],
			[
				"length",
				"lengths\tconst int *const lengths"
			],
			[
				"loadSou",
				"loadSources\tvoid loadSources(int count, const char **strings, const int *lengths)"
			],
			[
				"vsh",
				"vshCode"
			],
			[
				"fsh",
				"fshCode"
			],
			[
				"emplca",
				"emplace_back\treference emplace_back(_Args &&__args...)"
			],
			[
				"crate",
				"createShaderProgram\tShaderProgram createShaderProgram()"
			],
			[
				"Shad",
				"ShaderProgram\tShaderProgram"
			],
			[
				"loadS",
				"loadShaderCode\tstd::string loadShaderCode(std::string_view name)"
			],
			[
				"fragme",
				"fragmentShaderPos"
			],
			[
				"glTexImage",
				"glTexImage2D\tvoid glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels)"
			],
			[
				"loadTe",
				"loadTextureImage\tImage loadTextureImage(std::string_view name)"
			],
			[
				"en",
				"entity"
			],
			[
				"enti",
				"entities"
			],
			[
				"bgColor",
				"bgColor_\tColor bgColor_"
			],
			[
				"ba",
				"backgroundColor_"
			],
			[
				"back",
				"backgroundColor_"
			],
			[
				"camer",
				"camera"
			],
			[
				"buffers_",
				"GLEW_OES_draw_buffers_indexed\tGLEW_OES_draw_buffers_indexed"
			],
			[
				"buffe",
				"buffers_\tstd::vector<unsigned int> buffers_"
			],
			[
				"glBindV",
				"glBindVertexArray\tglBindVertexArray"
			],
			[
				"glDeleteArray",
				"glDeleteVertexArrays\tglDeleteVertexArrays"
			],
			[
				"even",
				"events_"
			],
			[
				"unor",
				"unordered_map\tunordered_map<class _Key, class _Tp>"
			],
			[
				"unorder",
				"unordered_map\tstandard header (since c++11)"
			],
			[
				"key",
				"keyPressHandler_"
			],
			[
				"ke",
				"keyPressHandler_"
			],
			[
				"size",
				"resizeHandler_\tResizeHandler resizeHandler_"
			],
			[
				"glfwcontext",
				"glfwGetCurrentContext\tGLFWwindow * glfwGetCurrentContext()"
			],
			[
				"window",
				"windowHandle_"
			],
			[
				"acti",
				"activate\tvoid activate()"
			],
			[
				"Cont",
				"ContextGuard"
			],
			[
				"context",
				"context_"
			],
			[
				"Conte",
				"ContextGuard\tContextGuard"
			],
			[
				"Rende",
				"RenderEngine\tRenderEngine"
			],
			[
				"update",
				"updateBehaviour\tUpdateBehavior updateBehaviour"
			],
			[
				"glfwWindowUser",
				"glfwGetWindowUserPointer\tvoid * glfwGetWindowUserPointer(GLFWwindow *window)"
			],
			[
				"Ve",
				"VertexArray"
			],
			[
				"scene",
				"scene_"
			],
			[
				"Vert",
				"VerticesData\tconst float [1] VerticesData"
			],
			[
				"main",
				"mainRenderer"
			],
			[
				"camera",
				"camera_"
			],
			[
				"sce",
				"scene_\tScene * scene_"
			],
			[
				"ne",
				"nearPlane"
			],
			[
				"glfwSetSize",
				"glfwSetWindowSizeCallback\tGLFWwindowsizefun glfwSetWindowSizeCallback(GLFWwindow *window, GLFWwindowsizefun cbfun)"
			],
			[
				"onS",
				"onSurfaceChanged\tvoid onSurfaceChanged(int width, int height)"
			],
			[
				"rendere",
				"renderer_"
			],
			[
				"ren",
				"renderer\tRenderer * renderer"
			],
			[
				"rota",
				"rotation"
			],
			[
				"bac",
				"backgroundColor"
			],
			[
				"far",
				"farPlane"
			],
			[
				"nar",
				"nearPlane"
			],
			[
				"aspe",
				"aspectRatio"
			],
			[
				"fie",
				"fieldOfView"
			],
			[
				"up",
				"upAxis"
			],
			[
				"cen",
				"centerPoint"
			],
			[
				"pos",
				"position"
			],
			[
				"positio",
				"position_"
			],
			[
				"he",
				"height_"
			],
			[
				"wid",
				"width_"
			],
			[
				"render",
				"renderImpl\tvoid renderImpl()"
			],
			[
				"obje",
				"objects_\tstd::vector<Object *> objects_"
			],
			[
				"objec",
				"objects_"
			],
			[
				"obj",
				"objects_"
			],
			[
				"nea",
				"nearPlane_"
			],
			[
				"fiel",
				"fieldOfView_"
			],
			[
				"upA",
				"upAxis_"
			],
			[
				"pro",
				"projection_"
			],
			[
				"windo",
				"windows_"
			],
			[
				"wind",
				"windows_"
			],
			[
				"Window",
				"WindowsRegistry\tWindowsRegistry::"
			],
			[
				"Win",
				"Window\tWindow::"
			],
			[
				"Wind",
				"WindowsRegistry"
			],
			[
				"nam",
				"name\tNamespace"
			],
			[
				"model",
				"modelUni"
			],
			[
				"GL_DEPTH_BUFFER",
				"GL_DEPTH_BUFFER_BIT\tGL_DEPTH_BUFFER_BIT"
			],
			[
				"rotat",
				"rotateSpeedZ"
			],
			[
				"rotate",
				"rotateSpeedX"
			],
			[
				"gWind",
				"gWindowsEnd"
			],
			[
				"radians",
				"radians\tgenType radians(genType degrees)"
			],
			[
				"iipw",
				"iipwTex"
			],
			[
				"tex",
				"texIIPW"
			],
			[
				"texco",
				"texcoordAttr\ttexcoordAttr(args)"
			],
			[
				"weiti",
				"weitiTex"
			],
			[
				"GL_CLAMP",
				"GL_CLAMP_TO_EDGE\tGL_CLAMP_TO_EDGE"
			],
			[
				"texII",
				"texIIPWUniform"
			],
			[
				"Te",
				"Texture2D"
			],
			[
				"image",
				"imageData"
			],
			[
				"util",
				"util/final_action.hpp\t/home/akowalew/workspace/ZW1-Mlyn/util/include"
			],
			[
				"generat",
				"generateNative"
			],
			[
				"GL_VERTEX",
				"GL_VERTEX_SHADER\tGL_VERTEX_SHADER"
			]
		]
	},
	"build_system": "ZW1-Mlyn - ZW1-Mlyn",
	"build_system_choices":
	[
		[
			[
				[
					"GLFW - glfw",
					""
				],
				[
					"GLFW - glfw/fast",
					""
				],
				[
					"ZW1-Mlyn - SOIL_static",
					""
				],
				[
					"ZW1-Mlyn - SOIL_static/fast",
					""
				],
				[
					"ZW1-Mlyn - ZW1-Mlyn",
					""
				],
				[
					"ZW1-Mlyn - ZW1-Mlyn/fast",
					""
				],
				[
					"ZW1-Mlyn - all",
					""
				],
				[
					"ZW1-Mlyn - clean",
					""
				],
				[
					"ZW1-Mlyn - edit_cache",
					""
				],
				[
					"ZW1-Mlyn - install",
					""
				],
				[
					"ZW1-Mlyn - install/local",
					""
				],
				[
					"ZW1-Mlyn - install/strip",
					""
				],
				[
					"ZW1-Mlyn - list_install_components",
					""
				],
				[
					"ZW1-Mlyn - rebuild_cache",
					""
				],
				[
					"ZW1-Mlyn - resources",
					""
				],
				[
					"glew - libglew_static",
					""
				],
				[
					"glew - libglew_static/fast",
					""
				],
				[
					"glm - glm_shared",
					""
				],
				[
					"glm - glm_shared/fast",
					""
				],
				[
					"glm - glm_static",
					""
				],
				[
					"glm - glm_static/fast",
					""
				],
				[
					"glm - uninstall",
					""
				]
			],
			[
				"ZW1-Mlyn - ZW1-Mlyn",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ren",
				"Rename File"
			],
			[
				"move",
				"File: Move"
			],
			[
				"rena",
				"Rename File"
			],
			[
				"sett",
				"Preferences: Settings"
			],
			[
				"de",
				"File: Delete"
			],
			[
				"dele",
				"File: Delete"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"ecc",
				"EasyClangComplete: Show all errors"
			],
			[
				"setting",
				"Preferences: Settings"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"brows",
				"Preferences: Browse Packages"
			],
			[
				"re",
				"Rename File"
			],
			[
				"git diff",
				"Git: Diff Current File"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"diff",
				"Set Syntax: Diff"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"INSTAL",
				"Package Control: Install Package"
			],
			[
				"renam",
				"Rename File"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add Current File"
			],
			[
				"git statu",
				"Git: Status"
			],
			[
				"clean",
				"Build With: ZW1-Mlyn - clean"
			],
			[
				"settin",
				"Preferences: Settings"
			],
			[
				"livereload",
				"LiveReload: Enable/disable plug-ins"
			],
			[
				"isntal",
				"Package Control: Install Package"
			],
			[
				"markdow",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markdown",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"e",
				"EasyClangComplete: Settings"
			],
			[
				"ECC",
				"EasyClangComplete: Clean current CMake cache"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"glsl",
				"Set Syntax: GLSL"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"check",
				"Git: Checkout Current File"
			],
			[
				"commi",
				"Git: Commit"
			],
			[
				"statu",
				"Git: Status"
			],
			[
				"setti",
				"Preferences: Settings"
			],
			[
				"gitsta",
				"Git: Status"
			],
			[
				"C++",
				"Set Syntax: C++"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"eccse",
				"EasyClangComplete: Show all errors"
			],
			[
				"cmake",
				"Set Syntax: CMake"
			],
			[
				"minima",
				"View: Toggle Minimap"
			],
			[
				"terminu",
				"Terminus Utilities: Select Theme"
			],
			[
				"ISNTALL",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 274.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/TextureLoader.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/ShaderLoader.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/GraphicsManager.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/BoxFactory.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Window.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Logging.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/BoxFactory.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/GraphicsManager.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/Window.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/Logging.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/Logger.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Material.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/MaterialsFactory.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/MaterialsFactory.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/main.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/Renderer.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Entity.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/ShapesFactory.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Mesh.hpp",
		"/home/akowalew/Documents/Attribute.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/VertexBuffer.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/IndexBuffer.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/VertexArray.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/VertexArray.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/IndexBuffer.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/VertexBuffer.cpp",
		"/home/akowalew/Documents/VertexArray.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/TextureLoader.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/ShaderProgram.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Shader.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glew-cmake/include/GL/glew.h",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Buffer.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/Buffer.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/ShaderProgram.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/Shader.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/ShaderLoader.hpp",
		"/home/akowalew/Documents/make",
		"/home/akowalew/Documents/Program.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/VertexShader.hpp",
		"/home/akowalew/Documents/Shader.hpp",
		"/home/akowalew/Documents/FragmentShader.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/Texture.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Texture.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/Texture2D.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/Simple-OpenGL-Image-Library/src/SOIL.h",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/Mesh.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Renderer.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Camera.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Transform.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/Renderer.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Vertex.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/ShapesFactory.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/meshes/BoxFactory.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/Mesh.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Event.hpp",
		"/home/akowalew/.config/sublime-text-3/Packages/User/Adaptive.sublime-theme",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glfw/include/GLFW/glfw3.h",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/World.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/ShapesManager.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/meshes/ConeFactory.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/meshes/CylinderFactory.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/meshes/SphereFactory.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/meshes/PyramidFactory.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/src/main.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/src/Context.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Context.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/src/Window.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/Context.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glfw/src/context.c",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glfw/src/internal.h",
		"/home/akowalew/workspace/ZW1-Mlyn/src/gkom/RenderEngine.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/RenderEngine.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/include/glfw/Context.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/UpdateBehaviour.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/include/gkom/Size.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/include/glfw/Window.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/MainRenderer.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/materials/Coloured.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/geometry/Cone.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/geometry/Sphere.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/geometry/Cylinder.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/materials/ColorMaterial.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/MainRenderer.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/Node.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/geometry/Box.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/Scene.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/VertexBuffer.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/VertexArray.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/ElementBuffer.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/Scene.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/geometry/Box.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/Camera.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/Camera.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/gl.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/include/glfw/Renderer.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/include/Size.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/include/glfw/Size.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/Material.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/geometry/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/materials/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/src/detail/WindowsRegistry.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/geometry/Pyramid.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/src/Application.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/include/glfw/detail/WindowsRegistry.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/glfw-cpp/include/glfw/Application.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/Renderer.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/geometry/Pyramid.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/Box.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/Context.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glm/glm/ext/matrix_transform.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/submodules/glm/glm/gtc/matrix_transform.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/Material.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/Renderer.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/build/o",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/Attribute.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/src/gl.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/CMakeLists.txt",
		"/home/akowalew/workspace/ZW1-Mlyn/gl-cpp/include/gl/glew.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/Window.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/World.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/Object.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/src/Box.cpp",
		"/home/akowalew/workspace/ZW1-Mlyn/app/include/Shape.hpp",
		"/home/akowalew/workspace/ZW1-Mlyn/gkom/include/gkom/World.hpp"
	],
	"find":
	{
		"height": 42.0
	},
	"find_in_files":
	{
		"height": 103.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"puts",
			"printf(\"[GKOM][Window] ",
			"_logger",
			"puts(\"[GKOM][Window]",
			"Window",
			"vector",
			"graphicsManager",
			"GraphicsManager",
			"graphicsManager",
			"GraphicsManager",
			"ShapesFactory",
			"VertexBuffer",
			"graphicsManager",
			"graphicsManager_",
			"indices",
			"indexBuffer",
			"vertexBuffer",
			"buffer",
			"buffers_",
			";",
			"Shader",
			"ShaderProgram",
			"Shader",
			"ShaderProgram",
			"GL_ELEMENT_ARRAY_BUFFER",
			"IndexBuffer",
			"Shader",
			"handle",
			";",
			"handle",
			"ShaderLoader",
			";",
			"Vertex",
			"type",
			"fshName",
			"fsh",
			"type",
			"fragmentShaderName",
			"strs",
			"TextureLoader",
			"fragmentShaderPos",
			";",
			"GL_ELEMENT_ARRAY_BUFFER",
			"Index",
			"IndexBuffer",
			"Texture",
			";",
			"void ",
			"Buffer",
			"unsigned int",
			"TextureLoader",
			";",
			"handle",
			"setImage",
			"graphicsManager",
			"const std::string&",
			"createTexture",
			"Path",
			"Transform",
			"buffer",
			"backgroundColor",
			"glm::vec4",
			"GraphicsManager",
			"ShapeFactory",
			"GraphicsManager",
			"GLsizei",
			"Window",
			"indices",
			"GL_ELEMENT_ARRAY_BUFFER",
			"vao",
			"std::size_t",
			"setupContext",
			"keyPressHandler_",
			"functional",
			"vector",
			"event",
			"ShapesManager",
			"Cylinder",
			"CylinderFactory",
			"sides",
			"Cylinder",
			"Pyramid",
			"Box",
			"// Forward declaration",
			"setupContext",
			"Hello",
			"keyPressHandler",
			"setupCallbacks",
			"std::chrono::",
			"joystick",
			"This function may be called from any thread",
			"@thread_safety",
			"onResize",
			"glfwSetWindowSizeCallback",
			"setupCallbacks",
			"Window",
			"handle_",
			"(",
			"override",
			"RenderEngige",
			"void ",
			"= 0",
			"glfw",
			"[GLFW]",
			"GLFW",
			"glfw",
			"thread_safety",
			"       ",
			"      ",
			"size.",
			"onSurfaceChanged",
			"size_",
			"override",
			"void ",
			"\\n\", window",
			", window);",
			"window",
			"GLFWwindowsizefun",
			"Box",
			"renderer_->",
			"gkom",
			"GKOM",
			"gkom",
			"GKOM",
			"gkom",
			"GKOM",
			"gkom",
			"[GKOM]"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.465122349753,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 139.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 121.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "ZW1-Mlyn - all",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"texture",
				"src/gkom/TextureLoader.cpp"
			],
			[
				"shaderlo",
				"src/gkom/ShaderLoader.cpp"
			],
			[
				"main",
				"src/main.cpp"
			],
			[
				"box",
				"include/gkom/BoxFactory.hpp"
			],
			[
				"window",
				"include/gkom/Window.hpp"
			],
			[
				"logg",
				"src/gkom/Logging.cpp"
			],
			[
				"logger",
				"src/gkom/Logger.cpp"
			],
			[
				"graphi",
				"include/gkom/GraphicsManager.hpp"
			],
			[
				"cmak",
				"CMakeLists.txt"
			],
			[
				"graphics",
				"src/gkom/GraphicsManager.cpp"
			],
			[
				"graphic",
				"src/gkom/GraphicsManager.cpp"
			],
			[
				"render",
				"src/gkom/Renderer.cpp"
			],
			[
				"entit",
				"include/gkom/Entity.hpp"
			],
			[
				"cma",
				"CMakeLists.txt"
			],
			[
				"cm",
				"CMakeLists.txt"
			],
			[
				"materia",
				"include/gkom/Material.hpp"
			],
			[
				"shapes",
				"include/gkom/ShapesFactory.hpp"
			],
			[
				"mesh",
				"include/gkom/Mesh.hpp"
			],
			[
				"mes",
				"include/gkom/Mesh.hpp"
			],
			[
				"boxf",
				"src/gkom/BoxFactory.cpp"
			],
			[
				"boxfa",
				"include/gkom/BoxFactory.hpp"
			],
			[
				"vertea",
				"include/gkom/VertexArray.hpp"
			],
			[
				"verte",
				"src/gkom/VertexBuffer.cpp"
			],
			[
				"index",
				"src/gkom/IndexBuffer.cpp"
			],
			[
				"gra",
				"src/gkom/GraphicsManager.cpp"
			],
			[
				"vertex",
				"src/gkom/VertexBuffer.cpp"
			],
			[
				"grap",
				"src/gkom/GraphicsManager.cpp"
			],
			[
				"buffer",
				"include/gkom/Buffer.hpp"
			],
			[
				"shader",
				"src/gkom/Shader.cpp"
			],
			[
				"shad",
				"src/gkom/ShaderProgram.cpp"
			],
			[
				"progra",
				"include/gkom/ShaderProgram.hpp"
			],
			[
				"shader.c",
				"src/gkom/Shader.cpp"
			],
			[
				"shader.cp",
				"src/gkom/Shader.cpp"
			],
			[
				"CMA",
				"CMakeLists.txt"
			],
			[
				"sha",
				"src/gkom/Shader.cpp"
			],
			[
				"shaderp",
				"include/gkom/ShaderProgram.hpp"
			],
			[
				"shader.cpp",
				"src/gkom/Shader.cpp"
			],
			[
				"grapi",
				"include/gkom/GraphicsManager.hpp"
			],
			[
				"tex",
				"src/gkom/TextureLoader.cpp"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"texturelo",
				"src/gkom/TextureLoader.cpp"
			],
			[
				"textu",
				"src/gkom/Texture.cpp"
			],
			[
				"enti",
				"include/gkom/Entity.hpp"
			],
			[
				"TEXT",
				"src/gkom/Texture.cpp"
			],
			[
				"textureload",
				"src/gkom/TextureLoader.cpp"
			],
			[
				"textureloa",
				"include/gkom/TextureLoader.hpp"
			],
			[
				"soil",
				"submodules/Simple-OpenGL-Image-Library/src/SOIL.h"
			],
			[
				"texture2",
				"gl-cpp/include/gl/Texture2D.hpp"
			],
			[
				"entity",
				"include/gkom/Entity.hpp"
			],
			[
				"tran",
				"include/gkom/Transform.hpp"
			],
			[
				"camera",
				"include/gkom/Camera.hpp"
			],
			[
				"ren",
				"include/gkom/Renderer.hpp"
			],
			[
				"boxfac",
				"include/gkom/BoxFactory.hpp"
			],
			[
				"MES",
				"include/gkom/Mesh.hpp"
			],
			[
				"MESH",
				"gkom/src/Mesh.cpp"
			],
			[
				"rendere",
				"include/gkom/Renderer.hpp"
			],
			[
				"glfw3",
				"submodules/glfw/include/GLFW/glfw3.h"
			],
			[
				"trans",
				"include/gkom/Transform.hpp"
			],
			[
				"shape",
				"include/gkom/ShapesManager.hpp"
			],
			[
				"graph",
				"include/gkom/GraphicsManager.hpp"
			],
			[
				"windo",
				"src/gkom/Window.cpp"
			],
			[
				"glew",
				"submodules/glew-cmake/include/GL/glew.h"
			],
			[
				"context.cp",
				"glfw-cpp/src/Context.cpp"
			],
			[
				"context",
				"include/gkom/Context.hpp"
			],
			[
				"window.cp",
				"glfw-cpp/src/Window.cpp"
			],
			[
				"window.c",
				"glfw-cpp/src/Window.cpp"
			],
			[
				"context.h",
				"glfw-cpp/include/glfw/Context.hpp"
			],
			[
				"gfw3",
				"submodules/glfw/include/GLFW/glfw3.h"
			],
			[
				"mainren",
				"gkom/src/MainRenderer.cpp"
			],
			[
				"material",
				"gkom/include/gkom/Material.hpp"
			],
			[
				"mainred",
				"gkom/include/gkom/MainRenderer.hpp"
			],
			[
				"mainre",
				"gkom/include/gkom/MainRenderer.hpp"
			],
			[
				"element",
				"gl-cpp/include/gl/ElementBuffer.hpp"
			],
			[
				"scnee",
				"gkom/include/gkom/Scene.hpp"
			],
			[
				"cmaera",
				"gkom/include/gkom/Camera.hpp"
			],
			[
				"conte",
				"glfw-cpp/include/glfw/Context.hpp"
			],
			[
				"gl.hpp",
				"gl-cpp/include/gl/gl.hpp"
			],
			[
				"size",
				"glfw-cpp/include/glfw/Size.hpp"
			],
			[
				"camera.cp",
				"gkom/src/Camera.cpp"
			],
			[
				"windowsre",
				"glfw-cpp/src/detail/WindowsRegistry.cpp"
			],
			[
				"window.cpp",
				"glfw-cpp/src/Window.cpp"
			],
			[
				"gtc matrix_trans",
				"submodules/glm/glm/gtc/matrix_transform.hpp"
			],
			[
				"cmaer",
				"gkom/include/gkom/Camera.hpp"
			],
			[
				"attribu",
				"gl-cpp/include/gl/Attribute.hpp"
			],
			[
				"scene",
				"gkom/include/gkom/Scene.hpp"
			],
			[
				"world",
				"gkom/include/gkom/World.hpp"
			],
			[
				"box.h",
				"gkom/include/gkom/Box.hpp"
			],
			[
				"obje",
				"gkom/include/gkom/Object.hpp"
			],
			[
				"main.c",
				"app/src/main.cpp"
			],
			[
				"appl",
				"gkom/include/gkom/Application.hpp"
			],
			[
				"gkom.cpp",
				"gkom/src/gkom.cpp"
			],
			[
				"glfwwindow",
				"glfw-cpp/src/Window.cpp"
			],
			[
				"gkom win",
				"gkom/src/Window.cpp"
			],
			[
				"glfw window",
				"glfw-cpp/src/Window.cpp"
			],
			[
				"windo gk",
				"gkom/src/Window.cpp"
			],
			[
				"wind ko",
				"gkom/include/gkom/Window.hpp"
			],
			[
				"con",
				"gkom/include/gkom/Context.hpp"
			],
			[
				"window gko",
				"gkom/src/Window.cpp"
			],
			[
				"glfw",
				"glfw-cpp/src/glfw.cpp"
			],
			[
				"WINDO",
				"glfw-cpp/include/glfw/Window.hpp"
			],
			[
				"scne",
				"app/include/Scene.hpp"
			],
			[
				"scene.cpp",
				"app/src/Scene.cpp"
			],
			[
				"gl.h",
				"gl-cpp/include/gl/gl.hpp"
			],
			[
				"color",
				"app/include/Color.hpp"
			],
			[
				"unifo",
				"gl-cpp/include/gl/Uniform.hpp"
			],
			[
				"gl.",
				"gl-cpp/include/gl/gl.hpp"
			],
			[
				"attr",
				"gl-cpp/include/gl/Attribute.hpp"
			],
			[
				"box.cp",
				"app/src/Box.cpp"
			],
			[
				"elemen",
				"gl-cpp/include/gl/ElementBuffer.hpp"
			],
			[
				"program",
				"gl-cpp/include/gl/Program.hpp"
			],
			[
				"verteb",
				"gl-cpp/include/gl/VertexBuffer.hpp"
			],
			[
				"main.cp",
				"app/src/main.cpp"
			],
			[
				"glew.cp",
				"gl-cpp/src/glew.cpp"
			],
			[
				"glf",
				"glfw-cpp/src/glfw.cpp"
			],
			[
				"wind",
				"glfw-cpp/include/glfw/Window.hpp"
			],
			[
				"main.vs",
				"app/res/main.vsh"
			],
			[
				"main.fs",
				"app/res/main.fsh"
			],
			[
				"text",
				"gl-cpp/include/gl/Texture2D.hpp"
			],
			[
				"triang",
				"app/src/Triangle.cpp"
			],
			[
				"Attr",
				"gl-cpp/include/gl/Attribute.hpp"
			],
			[
				"triangle",
				"app/src/Triangle.cpp"
			],
			[
				"attri",
				"gl-cpp/include/gl/Attribute.hpp"
			],
			[
				"progrma",
				"gl-cpp/include/gl/Program.hpp"
			],
			[
				"uni",
				"gl-cpp/include/gl/Uniform.hpp"
			],
			[
				"attru",
				"gl-cpp/include/gl/Attribute.hpp"
			],
			[
				"attrb",
				"gl-cpp/include/gl/Attribute.hpp"
			],
			[
				"progr",
				"gl-cpp/include/gl/Program.hpp"
			],
			[
				"VERTE",
				"gl-cpp/include/gl/VertexArray.hpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 191.0,
		"last_filter": "gl_element_buffer",
		"selected_items":
		[
			[
				"gl_element_buffer",
				"GL_ELEMENT_ARRAY_BUFFER_BINDING"
			],
			[
				"GLsizei",
				"GLsizei"
			],
			[
				"GLintptr",
				"GLintptr"
			],
			[
				"GLsizeiptr",
				"GLsizeiptr"
			],
			[
				"GLenum",
				"GLenum"
			],
			[
				"GLuint",
				"GLuint"
			],
			[
				"_GLFWwindow",
				"_GLFWwindow"
			],
			[
				"glfwMakeContextCurrent",
				"glfwMakeContextCurrent"
			],
			[
				"vec3",
				"vec3"
			],
			[
				"rotate",
				"rotate"
			],
			[
				"scale",
				"scale"
			],
			[
				"vec4",
				"vec4"
			],
			[
				"radians",
				"radians"
			],
			[
				"glfwsetkey",
				"glfwSetKeyCallback"
			],
			[
				"value_ptr",
				"value_ptr"
			],
			[
				"GL_COPY_READ_BUFFER_BINDING",
				"GL_COPY_READ_BUFFER_BINDING"
			],
			[
				"glfwhide",
				"glfwHideWindow"
			],
			[
				"glfwswap",
				"glfwSwapBuffers"
			],
			[
				"glew",
				"glewInfo"
			],
			[
				"glewInit",
				"glewInit"
			],
			[
				"glfwakeContextCurrent",
				"glfwMakeContextCurrent"
			],
			[
				"makeconte",
				"makeContextCurrent"
			],
			[
				"createprogram",
				"createProgram"
			],
			[
				"makep",
				"makeProgram"
			],
			[
				"GLFWCREATE",
				"glfwCreateWindow"
			]
		],
		"width": 576.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 202.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
